<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 5.0.0 (20220707.1540)
 -->
<!-- Title: UmlClassDiagram Pages: 1 -->
<svg width="582pt" height="1595pt"
 viewBox="0.00 0.00 581.94 1595.40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1591.4)">
<title>UmlClassDiagram</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1591.4 577.94,-1591.4 577.94,4 -4,4"/>
<!-- 0 -->
<g id="node1" class="node">
<title>0</title>
<polygon fill="#f2f2f2" stroke="black" points="0,-0.5 0,-1586.9 573.94,-1586.9 573.94,-0.5 0,-0.5"/>
<text text-anchor="middle" x="286.97" y="-1570.3" font-family="Times,serif" font-size="14.00">Storage</text>
<text text-anchor="middle" x="286.97" y="-1553.5" font-family="Times,serif" font-size="14.00">Storage.sol</text>
<polyline fill="none" stroke="black" points="0,-1545.3 573.94,-1545.3 "/>
<text text-anchor="start" x="8" y="-1528.7" font-family="Times,serif" font-size="14.00">Internal:</text>
<text text-anchor="start" x="8" y="-1511.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;s_uintStorage: mapping(bytes32=&gt;uint256)</text>
<text text-anchor="start" x="8" y="-1495.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;s_addressStorage: mapping(bytes32=&gt;address)</text>
<text text-anchor="start" x="8" y="-1478.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;s_boolStorage: mapping(bytes32=&gt;bool)</text>
<text text-anchor="start" x="8" y="-1461.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;s_bytesStorage: mapping(bytes32=&gt;bytes)</text>
<text text-anchor="start" x="8" y="-1444.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;s_stringStorage: mapping(bytes32=&gt;string)</text>
<text text-anchor="start" x="8" y="-1427.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;s_intStorage: mapping(bytes32=&gt;int256)</text>
<text text-anchor="start" x="8" y="-1411.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;s_bytes32Storage: mapping(bytes32=&gt;bytes32)</text>
<text text-anchor="start" x="8" y="-1394.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;s_uintArrayStorage: mapping(bytes32=&gt;uint256[])</text>
<text text-anchor="start" x="8" y="-1377.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;s_addressArrayStorage: mapping(bytes32=&gt;address[])</text>
<text text-anchor="start" x="8" y="-1360.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;s_bytesArrayStorage: mapping(bytes32=&gt;bytes[])</text>
<text text-anchor="start" x="8" y="-1343.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;s_stringArrayStorage: mapping(bytes32=&gt;string[])</text>
<text text-anchor="start" x="8" y="-1327.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;s_bytes32ArrayStorage: mapping(bytes32=&gt;bytes32[])</text>
<text text-anchor="start" x="8" y="-1310.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;s_intArrayStorage: mapping(bytes32=&gt;int256[])</text>
<text text-anchor="start" x="8" y="-1293.5" font-family="Times,serif" font-size="14.00">Public:</text>
<text text-anchor="start" x="8" y="-1276.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;tokensMapping: mapping(address=&gt;mapping(uint256=&gt;address))</text>
<polyline fill="none" stroke="black" points="0,-1268.5 573.94,-1268.5 "/>
<text text-anchor="start" x="8" y="-1251.9" font-family="Times,serif" font-size="14.00">Public:</text>
<text text-anchor="start" x="8" y="-1235.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setInitialValues()</text>
<text text-anchor="start" x="8" y="-1218.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getKey(key: string): bytes32</text>
<text text-anchor="start" x="8" y="-1201.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getKey(key: string, addr: address): bytes32</text>
<text text-anchor="start" x="8" y="-1184.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getKey(key: string, number: uint256): bytes32</text>
<text text-anchor="start" x="8" y="-1167.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getUint(key: bytes32): uint256</text>
<text text-anchor="start" x="8" y="-1151.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getAddress(key: bytes32): address</text>
<text text-anchor="start" x="8" y="-1134.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getBool(key: bytes32): bool</text>
<text text-anchor="start" x="8" y="-1117.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getBytes(key: bytes32): bytes</text>
<text text-anchor="start" x="8" y="-1100.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getString(key: bytes32): string</text>
<text text-anchor="start" x="8" y="-1083.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getInt(key: bytes32): int256</text>
<text text-anchor="start" x="8" y="-1067.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getBytes32(key: bytes32): bytes32</text>
<text text-anchor="start" x="8" y="-1050.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getUintArray(key: bytes32): uint256[]</text>
<text text-anchor="start" x="8" y="-1033.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getAddressArray(key: bytes32): address[]</text>
<text text-anchor="start" x="8" y="-1016.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getBytesArray(key: bytes32): bytes[]</text>
<text text-anchor="start" x="8" y="-999.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getStringArray(key: bytes32): string[]</text>
<text text-anchor="start" x="8" y="-983.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getBytes32Array(key: bytes32): bytes32[]</text>
<text text-anchor="start" x="8" y="-966.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getIntArray(key: bytes32): int256[]</text>
<text text-anchor="start" x="8" y="-949.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setUint(key: bytes32, value: uint256)</text>
<text text-anchor="start" x="8" y="-932.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setAddress(key: bytes32, value: address)</text>
<text text-anchor="start" x="8" y="-915.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setBool(key: bytes32, value: bool)</text>
<text text-anchor="start" x="8" y="-899.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setBytes(key: bytes32, value: bytes)</text>
<text text-anchor="start" x="8" y="-882.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setString(key: bytes32, value: string)</text>
<text text-anchor="start" x="8" y="-865.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setInt(key: bytes32, value: int256)</text>
<text text-anchor="start" x="8" y="-848.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setBytes32(key: bytes32, value: bytes32)</text>
<text text-anchor="start" x="8" y="-831.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setUintArray(key: bytes32, value: uint256[])</text>
<text text-anchor="start" x="8" y="-815.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setAddressArray(key: bytes32, value: address[])</text>
<text text-anchor="start" x="8" y="-798.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setBytesArray(key: bytes32, value: bytes[])</text>
<text text-anchor="start" x="8" y="-781.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setStringArray(key: bytes32, value: string[])</text>
<text text-anchor="start" x="8" y="-764.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setBytes32Array(key: bytes32, value: bytes32[])</text>
<text text-anchor="start" x="8" y="-747.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setIntArray(key: bytes32, value: int256[])</text>
<text text-anchor="start" x="8" y="-731.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;deleteUint(key: bytes32)</text>
<text text-anchor="start" x="8" y="-714.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;deleteAddress(key: bytes32)</text>
<text text-anchor="start" x="8" y="-697.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;deleteBool(key: bytes32)</text>
<text text-anchor="start" x="8" y="-680.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;deleteBytes(key: bytes32)</text>
<text text-anchor="start" x="8" y="-663.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;deleteString(key: bytes32)</text>
<text text-anchor="start" x="8" y="-647.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;deleteInt(key: bytes32)</text>
<text text-anchor="start" x="8" y="-630.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;deleteBytes32(key: bytes32)</text>
<text text-anchor="start" x="8" y="-613.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;deleteUintArray(key: bytes32)</text>
<text text-anchor="start" x="8" y="-596.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;deleteAddressArray(key: bytes32)</text>
<text text-anchor="start" x="8" y="-579.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;deleteBytesArray(key: bytes32)</text>
<text text-anchor="start" x="8" y="-563.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getAuthorizedToken(token: address): bool</text>
<text text-anchor="start" x="8" y="-546.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setAuthorizedToken(token: address, value: bool)</text>
<text text-anchor="start" x="8" y="-529.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;deleteAuthorizedToken(token: address)</text>
<text text-anchor="start" x="8" y="-512.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getAuthorizedChain(chainId: uint256): bool</text>
<text text-anchor="start" x="8" y="-495.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setAuthorizedChain(chainId: uint256, value: bool)</text>
<text text-anchor="start" x="8" y="-479.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;deleteAuthorizedChain(chainId: uint256)</text>
<text text-anchor="start" x="8" y="-462.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getBridgedToken(token: address): bool</text>
<text text-anchor="start" x="8" y="-445.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setBridgedToken(token: address, value: bool)</text>
<text text-anchor="start" x="8" y="-428.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;deleteBridgedToken(token: address)</text>
<text text-anchor="start" x="8" y="-411.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getBridgedTokenList(): address[]</text>
<text text-anchor="start" x="8" y="-395.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getBridgedTokenList(index: uint256): address</text>
<text text-anchor="start" x="8" y="-378.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;addBridgedTokenList(token: address)</text>
<text text-anchor="start" x="8" y="-361.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;removeBridgedTokenList(token: address)</text>
<text text-anchor="start" x="8" y="-344.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getTokenList(): address[]</text>
<text text-anchor="start" x="8" y="-327.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getTokenList(index: uint256): address</text>
<text text-anchor="start" x="8" y="-311.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;addTokenList(token: address)</text>
<text text-anchor="start" x="8" y="-294.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;removeTokenList(token: address)</text>
<text text-anchor="start" x="8" y="-277.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getChainIdsList(): uint256[]</text>
<text text-anchor="start" x="8" y="-260.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getChainIdsList(index: uint256): uint256</text>
<text text-anchor="start" x="8" y="-243.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;addChainIdsList(chainId: uint256)</text>
<text text-anchor="start" x="8" y="-227.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;removeChainIdsList(chainId: uint256)</text>
<text text-anchor="start" x="8" y="-210.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getBridgedTokenToChainId(token: address): uint256</text>
<text text-anchor="start" x="8" y="-193.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setBridgedTokenToChainId(token: address, chainId: uint256)</text>
<text text-anchor="start" x="8" y="-176.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;deleteBridgedTokenToChainId(token: address)</text>
<text text-anchor="start" x="8" y="-159.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getTokenOnChainId(tokenAddress: address, chainId: uint256): address</text>
<text text-anchor="start" x="8" y="-143.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setTokenOnChainId(tokenAddress: address, chainId: uint256, tokenAddressOnChainId: address)</text>
<text text-anchor="start" x="8" y="-126.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;updateOperator(role: string, newOperator: address)</text>
<text text-anchor="start" x="8" y="-109.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getOperator(role: string): address</text>
<text text-anchor="start" x="8" y="-92.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;isAdmin(addr: address): bool</text>
<text text-anchor="start" x="8" y="-75.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;isRelayer(addr: address): bool</text>
<text text-anchor="start" x="8" y="-59.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;isOracle(addr: address): bool</text>
<text text-anchor="start" x="8" y="-42.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;isBridge(addr: address): bool</text>
<text text-anchor="start" x="8" y="-25.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;isFactory(addr: address): bool</text>
<text text-anchor="start" x="8" y="-8.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;isVault(addr: address): bool</text>
</g>
</g>
</svg>
